{"version":3,"file":"react-compare-slider.cjs.development.js","sources":["../src/ReactCompareSliderHandle.tsx","../src/utils.ts","../src/ReactCompareSlider.tsx","../src/ReactCompareSliderImage.tsx"],"sourcesContent":["import React from 'react';\n\nimport { ReactCompareSliderCommonProps } from './types';\n\ninterface ThisArrowProps {\n  /** Whether to flip the arrow direction. */\n  flip?: boolean;\n}\n\nconst ThisArrow: React.FC<ThisArrowProps> = ({ flip }) => {\n  const style: React.CSSProperties = {\n    width: 0,\n    height: 0,\n    borderTop: '8px solid transparent',\n    borderRight: '10px solid',\n    borderBottom: '8px solid transparent',\n    transform: flip ? 'rotate(180deg)' : undefined,\n  };\n\n  return <div style={style} />;\n};\n\n/** Props for `ReactCompareSliderHandle`. */\nexport interface ReactCompareSliderHandleProps\n  extends Pick<ReactCompareSliderCommonProps, 'portrait'> {\n  /** Optional styles for handle the button. */\n  buttonStyle?: React.CSSProperties;\n  /** Optional styles for lines either side of the handle button. */\n  linesStyle?: React.CSSProperties;\n  /** Optional styles for the handle root. */\n  style?: React.CSSProperties;\n}\n\n/** Default `handle`. */\nexport const ReactCompareSliderHandle: React.FC<ReactCompareSliderHandleProps> = ({\n  portrait,\n  buttonStyle,\n  linesStyle,\n  style,\n  ...props\n}): React.ReactElement => {\n  const _style: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: portrait ? 'row' : 'column',\n    placeItems: 'center',\n    height: '100%',\n    cursor: portrait ? 'ns-resize' : 'ew-resize',\n    pointerEvents: 'none',\n    color: '#fff',\n    ...style,\n  };\n\n  const _linesStyle: React.CSSProperties = {\n    flexGrow: 1,\n    height: portrait ? 2 : '100%',\n    width: portrait ? '100%' : 2,\n    backgroundColor: 'currentColor',\n    pointerEvents: 'auto',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    ...linesStyle,\n  };\n\n  const _buttonStyle: React.CSSProperties = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gap: 8,\n    placeContent: 'center',\n    flexShrink: 0,\n    width: 56,\n    height: 56,\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    pointerEvents: 'auto',\n    backdropFilter: 'blur(7px)',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    transform: portrait ? 'rotate(90deg)' : undefined,\n    ...buttonStyle,\n  };\n\n  return (\n    <div className=\"__rcs-handle-root\" {...props} style={_style}>\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n      <div className=\"__rcs-handle-button\" style={_buttonStyle}>\n        <ThisArrow />\n        <ThisArrow flip />\n      </div>\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n    </div>\n  );\n};\n","import { RefObject, useCallback, useEffect, useLayoutEffect, useRef } from 'react';\n\n/**\n * Stand-alone CSS utility to make replaced elements (`img`, `video`, etc.) fit their\n * container.\n */\nexport const styleFitContainer = ({\n  boxSizing = 'border-box',\n  objectFit = 'cover',\n  objectPosition = 'center',\n  ...props\n}: React.CSSProperties = {}): React.CSSProperties => ({\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  maxWidth: '100%',\n  boxSizing,\n  objectFit,\n  objectPosition,\n  ...props,\n});\n\n/** Store the previous supplied value. */\nexport const usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n\n/**\n * Event listener binding hook.\n * @param eventName      - Event to bind to.\n * @param handler        - Callback handler.\n * @param element        - Element to bind to.\n * @param handlerOptions - Event handler options.\n */\nexport const useEventListener = (\n  eventName: EventListener['name'],\n  handler: EventListener['caller'],\n  element: EventTarget,\n  handlerOptions: AddEventListenerOptions\n): void => {\n  const savedHandler = useRef<EventListener['caller']>();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    // Make sure element supports addEventListener.\n    if (!(element && element.addEventListener)) return;\n\n    // Create event listener that calls handler function stored in ref.\n    const eventListener: EventListener = (event) =>\n      savedHandler.current && savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener, handlerOptions);\n\n    return (): void => {\n      element.removeEventListener(eventName, eventListener, handlerOptions);\n    };\n  }, [eventName, element, handlerOptions]);\n};\n\n/**\n * Conditionally use `useLayoutEffect` for client *or* `useEffect` for SSR.\n * @see <https://github.com/reduxjs/react-redux/blob/c581d480dd675f2645851fb006bef91aeb6ac24d/src/utils/useIsomorphicLayoutEffect.js>\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' && window.document && window.document.createElement\n    ? useLayoutEffect\n    : useEffect;\n\n/** Params passed to `useResizeObserver` `handler` function. */\nexport type UseResizeObserverHandlerParams = DOMRect;\n\n/**\n * Bind resize observer callback to element.\n * @param ref       - Element to bind to.\n * @param handler   - Callback for handling entry's bounding rect.\n */\nexport const useResizeObserver = (\n  ref: RefObject<Element>,\n  handler: (entry: UseResizeObserverHandlerParams) => void\n): void => {\n  const observer = useRef<ResizeObserver>();\n\n  const observe = useCallback(() => {\n    if (ref.current && observer.current) observer.current.observe(ref.current);\n  }, [ref]);\n\n  // Bind/rebind observer when `handler` changes.\n  useIsomorphicLayoutEffect(() => {\n    observer.current = new ResizeObserver(([entry]) => handler(entry.contentRect));\n    observe();\n\n    return (): void => {\n      if (observer.current) observer.current.disconnect();\n    };\n  }, [handler, observe]);\n};\n","import React, { forwardRef, useEffect, useCallback, useRef, useState } from 'react';\n\nimport { ReactCompareSliderHandle } from './ReactCompareSliderHandle';\nimport { ReactCompareSliderCommonProps, ReactCompareSliderPropPosition } from './types';\n\nimport {\n  useEventListener,\n  usePrevious,\n  UseResizeObserverHandlerParams,\n  useResizeObserver,\n} from './utils';\n\n/** Container for clipped item. */\nconst ThisClipContainer = forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>(\n  (props, ref): React.ReactElement => {\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      willChange: 'clip',\n      userSelect: 'none',\n      KhtmlUserSelect: 'none',\n      MozUserSelect: 'none',\n      WebkitUserSelect: 'none',\n    };\n\n    return <div {...props} style={style} data-rcs=\"clip-item\" ref={ref} />;\n  }\n);\n\nThisClipContainer.displayName = 'ThisClipContainer';\n\n/** Handle container to control position. */\nconst ThisHandleContainer = forwardRef<\n  HTMLDivElement,\n  React.HTMLProps<HTMLDivElement> & Pick<ReactCompareSliderCommonProps, 'portrait'>\n>(\n  ({ children, portrait }, ref): React.ReactElement => {\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n    };\n\n    const innerStyle: React.CSSProperties = {\n      position: 'absolute',\n      width: portrait ? '100%' : undefined,\n      height: portrait ? undefined : '100%',\n      transform: portrait ? 'translateY(-50%)' : 'translateX(-50%)',\n      pointerEvents: 'all',\n    };\n\n    return (\n      <div style={style} data-rcs=\"handle-container\" ref={ref}>\n        <div style={innerStyle}>{children}</div>\n      </div>\n    );\n  }\n);\n\nThisHandleContainer.displayName = 'ThisHandleContainer';\n\n/** Comparison slider properties. */\nexport interface ReactCompareSliderProps extends Partial<ReactCompareSliderCommonProps> {\n  /** Padding to limit the slideable bounds in pixels on the X-axis (landscape) or Y-axis (portrait). */\n  boundsPadding?: number;\n  /** Custom handle component. */\n  handle?: React.ReactNode;\n  /** First item to show. */\n  itemOne: React.ReactNode;\n  /** Second item to show. */\n  itemTwo: React.ReactNode;\n  /** Whether to only change position when handle is interacted with (useful for touch devices). */\n  onlyHandleDraggable?: boolean;\n  /** Callback on position change with position as percentage. */\n  onPositionChange?: (position: ReactCompareSliderPropPosition) => void;\n}\n\n/** Properties for internal `updateInternalPosition` callback. */\ninterface UpdateInternalPositionProps\n  extends Required<Pick<ReactCompareSliderProps, 'boundsPadding' | 'portrait'>> {\n  /** X coordinate to update to (landscape). */\n  x: number;\n  /** Y coordinate to update to (portrait). */\n  y: number;\n  /** Whether to calculate using page X and Y offsets (required for pointer events). */\n  isOffset?: boolean;\n}\n\nconst EVENT_PASSIVE_PARAMS = { passive: true };\nconst EVENT_CAPTURE_PARAMS = { capture: true, passive: false };\n\n/** Root Comparison slider. */\nexport const ReactCompareSlider: React.FC<\n  ReactCompareSliderProps & React.HtmlHTMLAttributes<HTMLDivElement>\n> = ({\n  handle,\n  itemOne,\n  itemTwo,\n  onlyHandleDraggable = false,\n  onPositionChange,\n  portrait = false,\n  position = 50,\n  boundsPadding = 0,\n  style,\n  ...props\n}): React.ReactElement => {\n  /** Reference to root container. */\n  const rootContainerRef = useRef<HTMLDivElement>(null);\n  /** Reference to clip container. */\n  const clipContainerRef = useRef<HTMLDivElement>(null);\n  /** Reference to handle container. */\n  const handleContainerRef = useRef<HTMLDivElement>(null);\n  /** Reference to current position as a percentage value. */\n  const internalPositionPc = useRef(position);\n  /** Previous `position` prop value. */\n  const prevPropPosition = usePrevious(position);\n  /** Whether user is currently dragging. */\n  const [isDragging, setIsDragging] = useState(false);\n  /** Whether component has a `window` event binding. */\n  const hasWindowBinding = useRef(false);\n  /** Target container for pointer events. */\n  const [interactiveTarget, setInteractiveTarget] = useState<HTMLDivElement | null>();\n\n  // Set target container for pointer events.\n  useEffect(() => {\n    setInteractiveTarget(\n      onlyHandleDraggable ? handleContainerRef.current : rootContainerRef.current\n    );\n  }, [onlyHandleDraggable]);\n\n  /** Update internal position value. */\n  const updateInternalPosition = useCallback(\n    function updateInternalCall({\n      x,\n      y,\n      isOffset,\n      portrait: _portrait,\n      boundsPadding: _boundsPadding,\n    }: UpdateInternalPositionProps) {\n      const {\n        top,\n        left,\n        width,\n        height,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      } = rootContainerRef.current!.getBoundingClientRect();\n\n      // Early out if width or height are zero, can't calculate values\n      // from zeros.\n      if (width === 0 || height === 0) return;\n\n      // Clamp pixel position to always be within the container's bounds.\n      // This does *not* take `boundsPadding` into account because we need\n      // the real coords to correctly position the handle.\n      const positionPx = Math.min(\n        Math.max(\n          // Determine bounds based on orientation\n          _portrait\n            ? isOffset\n              ? y - top - window.pageYOffset\n              : y\n            : isOffset\n            ? x - left - window.pageXOffset\n            : x,\n          // Min value\n          0\n        ),\n        // Max value\n        _portrait ? height : width\n      );\n\n      /**\n       * Internal position percentage *without* bounds.\n       * @NOTE This uses the entire container bounds **without** `boundsPadding`\n       *       to get the *real* bounds.\n       */\n      const nextInternalPositionPc = (positionPx / (_portrait ? height : width)) * 100;\n\n      /** Determine if the current pixel position meets the min/max bounds. */\n      const positionMeetsBounds = _portrait\n        ? positionPx === 0 || positionPx === height\n        : positionPx === 0 || positionPx === width;\n\n      const canSkipPositionPc =\n        nextInternalPositionPc === internalPositionPc.current &&\n        (internalPositionPc.current === 0 || internalPositionPc.current === 100);\n\n      // Early out if pixel and percentage positions are already at the min/max\n      // to prevent update spamming when the user is sliding outside of the\n      // container.\n      if (canSkipPositionPc && positionMeetsBounds) {\n        return;\n      }\n\n      // Set new internal position.\n      internalPositionPc.current = nextInternalPositionPc;\n\n      /** Pixel position clamped to extremities *with* bounds padding. */\n      const clampedPx = Math.min(\n        // Get largest from pixel position *or* bounds padding.\n        Math.max(positionPx, 0 + _boundsPadding),\n        // Use height *or* width based on orientation.\n        (_portrait ? height : width) - _boundsPadding\n      );\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      clipContainerRef.current!.style.clip = _portrait\n        ? `rect(auto,auto,${clampedPx}px,auto)`\n        : `rect(auto,${clampedPx}px,auto,auto)`;\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      handleContainerRef.current!.style.transform = _portrait\n        ? `translate3d(0,${clampedPx}px,0)`\n        : `translate3d(${clampedPx}px,0,0)`;\n\n      if (onPositionChange) onPositionChange(internalPositionPc.current);\n    },\n    [onPositionChange]\n  );\n\n  // Update internal position when other user controllable props change.\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { width, height } = rootContainerRef.current!.getBoundingClientRect();\n\n    // Use current internal position if `position` hasn't changed.\n    const nextPosition =\n      position === prevPropPosition ? internalPositionPc.current : position;\n\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      x: (width / 100) * nextPosition,\n      y: (height / 100) * nextPosition,\n    });\n  }, [portrait, position, prevPropPosition, boundsPadding, updateInternalPosition]);\n\n  /** Handle mouse/touch down. */\n  const handlePointerDown = useCallback(\n    (ev: MouseEvent | TouchEvent) => {\n      ev.preventDefault();\n\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        isOffset: true,\n        x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n        y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY,\n      });\n\n      setIsDragging(true);\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  /** Handle mouse/touch move. */\n  const handlePointerMove = useCallback(\n    function moveCall(ev: MouseEvent | TouchEvent) {\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        isOffset: true,\n        x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n        y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY,\n      });\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  /** Handle mouse/touch up. */\n  const handlePointerUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  /** Resync internal position on resize. */\n  const handleResize = useCallback(\n    ({ width, height }: UseResizeObserverHandlerParams) => {\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        x: (width / 100) * internalPositionPc.current,\n        y: (height / 100) * internalPositionPc.current,\n      });\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  // Allow drag outside of container while pointer is still down.\n  useEffect(() => {\n    if (isDragging && !hasWindowBinding.current) {\n      window.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('mouseup', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchmove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchend', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      hasWindowBinding.current = true;\n    }\n\n    return (): void => {\n      if (hasWindowBinding.current) {\n        window.removeEventListener('mousemove', handlePointerMove);\n        window.removeEventListener('mouseup', handlePointerUp);\n        window.removeEventListener('touchmove', handlePointerMove);\n        window.removeEventListener('touchend', handlePointerUp);\n        hasWindowBinding.current = false;\n      }\n    };\n  }, [handlePointerMove, handlePointerUp, isDragging]);\n\n  // Bind resize observer to container.\n  useResizeObserver(rootContainerRef, handleResize);\n\n  useEventListener(\n    'mousedown',\n    handlePointerDown,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    interactiveTarget!,\n    EVENT_CAPTURE_PARAMS\n  );\n\n  useEventListener(\n    'touchstart',\n    handlePointerDown,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    interactiveTarget!,\n    EVENT_CAPTURE_PARAMS\n  );\n\n  // Use custom handle if requested.\n  const Handle = handle || <ReactCompareSliderHandle portrait={portrait} />;\n\n  const rootStyle: React.CSSProperties = {\n    position: 'relative',\n    overflow: 'hidden',\n    cursor: isDragging ? (portrait ? 'ns-resize' : 'ew-resize') : undefined,\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    msUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n    ...style,\n  };\n\n  return (\n    <div {...props} ref={rootContainerRef} style={rootStyle} data-rcs=\"root\">\n      {itemTwo}\n      <ThisClipContainer ref={clipContainerRef}>{itemOne}</ThisClipContainer>\n      <ThisHandleContainer portrait={portrait} ref={handleContainerRef}>\n        {Handle}\n      </ThisHandleContainer>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { styleFitContainer } from './utils';\n\n/** Props for `ReactCompareSliderImage`. */\nexport type ReactCompareSliderImageProps = React.ImgHTMLAttributes<HTMLImageElement>;\n\n/** Image with defaults from `styleFitContainer` applied. */\nexport const ReactCompareSliderImage: React.FC<ReactCompareSliderImageProps> = ({\n  style,\n  ...props\n}): React.ReactElement => {\n  const rootStyle: React.CSSProperties = styleFitContainer(style);\n\n  return <img {...props} style={rootStyle} data-rcs=\"image\" />;\n};\n"],"names":["ThisArrow","flip","style","width","height","borderTop","borderRight","borderBottom","transform","undefined","React","ReactCompareSliderHandle","portrait","buttonStyle","linesStyle","props","_style","display","flexDirection","placeItems","cursor","pointerEvents","color","_linesStyle","flexGrow","backgroundColor","boxShadow","_buttonStyle","gridAutoFlow","gap","placeContent","flexShrink","borderRadius","borderStyle","borderWidth","backdropFilter","className","styleFitContainer","boxSizing","objectFit","objectPosition","maxWidth","usePrevious","value","ref","useRef","useEffect","current","useEventListener","eventName","handler","element","handlerOptions","savedHandler","addEventListener","eventListener","event","removeEventListener","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","useResizeObserver","observer","observe","useCallback","ResizeObserver","entry","contentRect","disconnect","ThisClipContainer","forwardRef","position","top","left","willChange","userSelect","KhtmlUserSelect","MozUserSelect","WebkitUserSelect","displayName","ThisHandleContainer","children","innerStyle","EVENT_PASSIVE_PARAMS","passive","EVENT_CAPTURE_PARAMS","capture","ReactCompareSlider","handle","itemOne","itemTwo","onlyHandleDraggable","onPositionChange","boundsPadding","rootContainerRef","clipContainerRef","handleContainerRef","internalPositionPc","prevPropPosition","isDragging","setIsDragging","useState","hasWindowBinding","interactiveTarget","setInteractiveTarget","updateInternalPosition","updateInternalCall","x","y","isOffset","_portrait","_boundsPadding","getBoundingClientRect","positionPx","Math","min","max","pageYOffset","pageXOffset","nextInternalPositionPc","positionMeetsBounds","canSkipPositionPc","clampedPx","clip","nextPosition","handlePointerDown","ev","preventDefault","MouseEvent","pageX","touches","pageY","handlePointerMove","moveCall","handlePointerUp","handleResize","Handle","rootStyle","overflow","msUserSelect","ReactCompareSliderImage"],"mappings":"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"}