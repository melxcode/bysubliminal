{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\components\\\\@material-extend\\\\MChip.js\";\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // material\n\nimport { alpha, experimentalStyled as styled, emphasize } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChipStyle = styled(Chip)(({\n  theme,\n  styleProps\n}) => {\n  const {\n    color,\n    variant,\n    clickable,\n    onDelete\n  } = styleProps; // Filled\n\n  const styleFilled = color => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n    '& .MuiChip-icon': {\n      color: 'inherit'\n    },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[color].contrastText\n      }\n    }\n  });\n\n  const styleFilledClickable = color => ({\n    '&:hover, &:focus': {\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.hoverOpacity)\n    }\n  });\n\n  const styleFilledDeletable = color => ({\n    '&:focus': {\n      backgroundColor: emphasize(theme.palette[color].main, theme.palette.action.focusOpacity)\n    }\n  }); // Outlined\n\n\n  const styleOutlined = color => ({\n    color: theme.palette[color].main,\n    border: `1px solid ${theme.palette[color].main}`,\n    '&:focus, &.MuiChip-clickable:hover': {\n      backgroundColor: alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n    },\n    '& .MuiChip-icon': {\n      color: 'currentColor'\n    },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[color].main\n      }\n    }\n  });\n\n  return { ...(variant === 'filled' ? { ...styleFilled(color),\n      ...(clickable && { ...styleFilledClickable(color)\n      }),\n      ...(onDelete && { ...styleFilledDeletable(color)\n      })\n    } : { ...styleOutlined(color)\n    })\n  };\n}); // ----------------------------------------------------------------------\n\nconst Mchip = /*#__PURE__*/forwardRef(_c = ({\n  color = 'default',\n  variant = 'filled',\n  clickable: clickableProp,\n  onDelete: onDeleteProp,\n  ...other\n}, ref) => {\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(Chip, {\n      ref: ref,\n      color: color,\n      variant: variant,\n      clickable: clickableProp && clickableProp,\n      onDelete: onDeleteProp && onDeleteProp,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChipStyle, {\n    ref: ref,\n    variant: variant,\n    clickable: clickableProp && clickableProp,\n    onDelete: onDeleteProp && onDeleteProp,\n    styleProps: {\n      color,\n      variant,\n      clickable: clickableProp && clickableProp,\n      onDelete: onDeleteProp && onDeleteProp\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Mchip;\nMchip.propTypes = {\n  clickable: PropTypes.bool,\n  onDelete: PropTypes.func,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n};\nexport default Mchip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mchip$forwardRef\");\n$RefreshReg$(_c2, \"Mchip\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/components/@material-extend/MChip.js"],"names":["PropTypes","forwardRef","alpha","experimentalStyled","styled","emphasize","Chip","ChipStyle","theme","styleProps","color","variant","clickable","onDelete","styleFilled","palette","contrastText","backgroundColor","main","lighter","dark","styleFilledClickable","action","hoverOpacity","styleFilledDeletable","focusOpacity","styleOutlined","border","Mchip","clickableProp","onDeleteProp","other","ref","propTypes","bool","func","oneOf","oneOfType","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// material\nimport {\n  alpha,\n  experimentalStyled as styled,\n  emphasize\n} from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst ChipStyle = styled(Chip)(({ theme, styleProps }) => {\n  const { color, variant, clickable, onDelete } = styleProps;\n\n  // Filled\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n    '& .MuiChip-icon': { color: 'inherit' },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].contrastText, 0.7),\n      '&:hover, &:active': { color: theme.palette[color].contrastText }\n    }\n  });\n\n  const styleFilledClickable = (color) => ({\n    '&:hover, &:focus': {\n      backgroundColor: emphasize(\n        theme.palette[color].main,\n        theme.palette.action.hoverOpacity\n      )\n    }\n  });\n\n  const styleFilledDeletable = (color) => ({\n    '&:focus': {\n      backgroundColor: emphasize(\n        theme.palette[color].main,\n        theme.palette.action.focusOpacity\n      )\n    }\n  });\n\n  // Outlined\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    border: `1px solid ${theme.palette[color].main}`,\n    '&:focus, &.MuiChip-clickable:hover': {\n      backgroundColor: alpha(\n        theme.palette[color].main,\n        theme.palette.action.hoverOpacity\n      )\n    },\n    '& .MuiChip-icon': { color: 'currentColor' },\n    '& .MuiChip-avatar': {\n      color: theme.palette[color].lighter,\n      backgroundColor: theme.palette[color].dark\n    },\n    '& .MuiChip-deleteIcon': {\n      color: alpha(theme.palette[color].main, 0.7),\n      '&:hover, &:active': { color: theme.palette[color].main }\n    }\n  });\n\n  return {\n    ...(variant === 'filled'\n      ? {\n          ...styleFilled(color),\n          ...(clickable && { ...styleFilledClickable(color) }),\n          ...(onDelete && { ...styleFilledDeletable(color) })\n        }\n      : {\n          ...styleOutlined(color)\n        })\n  };\n});\n\n// ----------------------------------------------------------------------\n\nconst Mchip = forwardRef(\n  (\n    {\n      color = 'default',\n      variant = 'filled',\n      clickable: clickableProp,\n      onDelete: onDeleteProp,\n      ...other\n    },\n    ref\n  ) => {\n    if (color === 'default' || color === 'primary' || color === 'secondary') {\n      return (\n        <Chip\n          ref={ref}\n          color={color}\n          variant={variant}\n          clickable={clickableProp && clickableProp}\n          onDelete={onDeleteProp && onDeleteProp}\n          {...other}\n        />\n      );\n    }\n\n    return (\n      <ChipStyle\n        ref={ref}\n        variant={variant}\n        clickable={clickableProp && clickableProp}\n        onDelete={onDeleteProp && onDeleteProp}\n        styleProps={{\n          color,\n          variant,\n          clickable: clickableProp && clickableProp,\n          onDelete: onDeleteProp && onDeleteProp\n        }}\n        {...other}\n      />\n    );\n  }\n);\n\nMchip.propTypes = {\n  clickable: PropTypes.bool,\n  onDelete: PropTypes.func,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  variant: PropTypes.oneOfType([\n    PropTypes.oneOf(['filled', 'outlined']),\n    PropTypes.string\n  ])\n};\n\nexport default Mchip;\n"]},"metadata":{},"sourceType":"module"}