{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useMaskedInput } from '../internal/pickers/hooks/useMaskedInput';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'baseline',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  },\n  toLabelDelimiter: {\n    margin: '8px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 16px'\n    }\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    classes,\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"]);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) === null || _startRef$current === void 0 ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/_jsx(\"div\", {\n    onBlur: onBlur,\n    className: classes.root,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerInput'\n})(DateRangePickerInput);","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/DateRangePicker/DateRangePickerInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","withStyles","useUtils","useMaskedInput","WrapperVariantContext","executeInTheNextEventLoopTick","jsx","_jsx","styles","theme","root","display","alignItems","breakpoints","down","flexDirection","toLabelDelimiter","margin","up","DateRangePickerInput","forwardRef","props","ref","classes","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","other","utils","startRef","useRef","endRef","wrapperVariant","useContext","useEffect","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","useCallback","args","handleStartChange","date","inputString","handleEndChange","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","label","focused","inputProps","onClick","undefined","onFocus","endInputProps","className","children","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useMaskedInput } from '../internal/pickers/hooks/useMaskedInput';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'baseline',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  },\n  toLabelDelimiter: {\n    margin: '8px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 16px'\n    }\n  }\n});\n\n/**\n * @ignore - internal component.\n */\nconst DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    classes,\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"]);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) === null || _startRef$current === void 0 ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/_jsx(\"div\", {\n    onBlur: onBlur,\n    className: classes.root,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerInput'\n})(DateRangePickerInput);"]},"metadata":{},"sourceType":"module"}