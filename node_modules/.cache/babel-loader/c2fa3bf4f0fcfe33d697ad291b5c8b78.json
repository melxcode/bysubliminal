{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\components\\\\@material-extend\\\\MCheckbox.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // material\n\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { Checkbox } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCheckbox = /*#__PURE__*/forwardRef(_c = _s(({\n  color = 'primary',\n  sx,\n  ...other\n}, ref) => {\n  _s();\n\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(Checkbox, {\n      ref: ref,\n      color: color,\n      sx: sx,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    ref: ref,\n    sx: {\n      '&.Mui-checked': {\n        color: theme.palette[color].main\n      },\n      '&.MuiCheckbox-indeterminate': {\n        color: theme.palette[color].main\n      },\n      '&:hover, &.Mui-checked:hover': {\n        backgroundColor: alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      },\n      ...sx\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = MCheckbox;\nMCheckbox.propTypes = {\n  sx: PropTypes.object,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'])\n};\nexport default MCheckbox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MCheckbox$forwardRef\");\n$RefreshReg$(_c2, \"MCheckbox\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/components/@material-extend/MCheckbox.js"],"names":["PropTypes","forwardRef","alpha","useTheme","Checkbox","MCheckbox","color","sx","other","ref","theme","palette","main","backgroundColor","action","hoverOpacity","propTypes","object","oneOf"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,0BAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;;;AAEA,MAAMC,SAAS,gBAAGJ,UAAU,SAAC,CAAC;AAAEK,EAAAA,KAAK,GAAG,SAAV;AAAqBC,EAAAA,EAArB;AAAyB,KAAGC;AAA5B,CAAD,EAAsCC,GAAtC,KAA8C;AAAA;;AACzE,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;;AAEA,MAAIG,KAAK,KAAK,SAAV,IAAuBA,KAAK,KAAK,SAAjC,IAA8CA,KAAK,KAAK,WAA5D,EAAyE;AACvE,wBAAO,QAAC,QAAD;AAAU,MAAA,GAAG,EAAEG,GAAf;AAAoB,MAAA,KAAK,EAAEH,KAA3B;AAAkC,MAAA,EAAE,EAAEC,EAAtC;AAAA,SAA8CC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,EAAE,EAAE;AACF,uBAAiB;AACfH,QAAAA,KAAK,EAAEI,KAAK,CAACC,OAAN,CAAcL,KAAd,EAAqBM;AADb,OADf;AAIF,qCAA+B;AAC7BN,QAAAA,KAAK,EAAEI,KAAK,CAACC,OAAN,CAAcL,KAAd,EAAqBM;AADC,OAJ7B;AAOF,sCAAgC;AAC9BC,QAAAA,eAAe,EAAEX,KAAK,CACpBQ,KAAK,CAACC,OAAN,CAAcL,KAAd,EAAqBM,IADD,EAEpBF,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAqBC,YAFD;AADQ,OAP9B;AAaF,SAAGR;AAbD,KAFN;AAAA,OAiBMC;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5B2B;AAAA,UACZL,QADY;AAAA,GAA5B;MAAME,S;AA8BNA,SAAS,CAACW,SAAV,GAAsB;AACpBT,EAAAA,EAAE,EAAEP,SAAS,CAACiB,MADM;AAEpBX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,CAAhB;AAFa,CAAtB;AAaA,eAAeb,SAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// material\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { Checkbox } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst MCheckbox = forwardRef(({ color = 'primary', sx, ...other }, ref) => {\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return <Checkbox ref={ref} color={color} sx={sx} {...other} />;\n  }\n\n  return (\n    <Checkbox\n      ref={ref}\n      sx={{\n        '&.Mui-checked': {\n          color: theme.palette[color].main\n        },\n        '&.MuiCheckbox-indeterminate': {\n          color: theme.palette[color].main\n        },\n        '&:hover, &.Mui-checked:hover': {\n          backgroundColor: alpha(\n            theme.palette[color].main,\n            theme.palette.action.hoverOpacity\n          )\n        },\n        ...sx\n      }}\n      {...other}\n    />\n  );\n});\n\nMCheckbox.propTypes = {\n  sx: PropTypes.object,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ])\n};\n\nexport default MCheckbox;\n"]},"metadata":{},"sourceType":"module"}