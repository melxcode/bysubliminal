{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectRootStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilitiyClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles.select, styles[styleProps.variant], {\n    [`& .${selectClasses.icon}`]: _extends({}, styles.icon, styleProps.variant && styles[`icon${capitalize(styleProps.variant)}`], styleProps.open && styles.iconOpen)\n  }), styles.root || {});\n};\nconst SelectRoot = experimentalStyled('div', {}, {\n  name: 'MuiSelect',\n  slot: 'Root',\n  overridesResolver\n})(nativeSelectRootStyles, {\n  [`&.${selectClasses.selectMenu}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = experimentalStyled('svg', {}, {\n  name: 'MuiSelect',\n  slot: 'Icon'\n})(nativeSelectIconStyles);\nconst SelectNativeInput = experimentalStyled('input', {}, {\n  name: 'MuiSelect',\n  slot: 'NativeInput'\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    disabled,\n    open\n  } = styleProps;\n  const slots = {\n    root: ['root', 'select', variant, disabled && 'disabled', 'selectMenu'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilitiyClasses, classes);\n};\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const styleProps = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectRoot, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      styleProps: styleProps,\n      className: clsx(classes.root, className, SelectDisplayProps.className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ?\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      }) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      styleProps: styleProps\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      styleProps: styleProps\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/core/Select/SelectInput.js"],"names":["_objectWithoutPropertiesLoose","_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","refType","deepmerge","ownerDocument","capitalize","Menu","nativeSelectRootStyles","nativeSelectIconStyles","isFilled","experimentalStyled","useForkRef","useControlled","selectClasses","getSelectUtilitiyClasses","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","select","variant","icon","open","iconOpen","root","SelectRoot","name","slot","selectMenu","height","minHeight","textOverflow","whiteSpace","overflow","SelectIcon","SelectNativeInput","bottom","left","position","opacity","pointerEvents","width","boxSizing","areEqualValues","a","b","String","isEmpty","display","trim","useUtilityClasses","classes","disabled","slots","nativeInput","SelectInput","forwardRef","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","className","defaultValue","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","multiple","onBlur","onChange","onClose","onFocus","onOpen","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","other","setValueState","controlled","default","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","handleDisplayRef","useCallback","node","useImperativeHandle","focus","useEffect","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","undefined","update","event","clientWidth","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","currentTarget","hasAttribute","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","persist","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","menuMinWidth","buttonId","id","Fragment","Boolean","onKeyDown","onMouseDown","dangerouslySetInnerHTML","__html","as","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","any","elementType","isRequired","func","oneOfType","number","oneOf"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectRootStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilitiyClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles.select, styles[styleProps.variant], {\n    [`& .${selectClasses.icon}`]: _extends({}, styles.icon, styleProps.variant && styles[`icon${capitalize(styleProps.variant)}`], styleProps.open && styles.iconOpen)\n  }), styles.root || {});\n};\nconst SelectRoot = experimentalStyled('div', {}, {\n  name: 'MuiSelect',\n  slot: 'Root',\n  overridesResolver\n})(nativeSelectRootStyles, {\n  [`&.${selectClasses.selectMenu}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = experimentalStyled('svg', {}, {\n  name: 'MuiSelect',\n  slot: 'Icon'\n})(nativeSelectIconStyles);\nconst SelectNativeInput = experimentalStyled('input', {}, {\n  name: 'MuiSelect',\n  slot: 'NativeInput'\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    disabled,\n    open\n  } = styleProps;\n  const slots = {\n    root: ['root', 'select', variant, disabled && 'disabled', 'selectMenu'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilitiyClasses, classes);\n};\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const styleProps = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectRoot, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      styleProps: styleProps,\n      className: clsx(classes.root, className, SelectDisplayProps.className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ?\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      }) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      styleProps: styleProps\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      styleProps: styleProps\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}