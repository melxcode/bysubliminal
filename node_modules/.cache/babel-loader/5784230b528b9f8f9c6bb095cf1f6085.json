{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\layouts\\\\dashboard\\\\NotificationsPopover.js\",\n    _s = $RefreshSig$();\n\nimport faker from 'faker';\nimport PropTypes from 'prop-types';\nimport { set, sub, formatDistanceToNow } from 'date-fns';\nimport { noCase } from 'change-case';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill'; // material\n\nimport { Box, List, Badge, Button, Avatar, Tooltip, Divider, ListItem, Typography, ListItemText, ListSubheader, ListItemAvatar } from '@material-ui/core'; // utils\n\nimport { mockImgAvatar } from '../../utils/mockImages'; // components\n\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NOTIFICATIONS = [{\n  id: faker.datatype.uuid(),\n  title: 'Your order is placed',\n  description: 'waiting for shipping',\n  avatar: null,\n  type: 'order_placed',\n  createdAt: set(new Date(), {\n    hours: 10,\n    minutes: 30\n  }),\n  isUnRead: true\n}, {\n  id: faker.datatype.uuid(),\n  title: faker.name.findName(),\n  description: 'answered to your comment on the Minimal',\n  avatar: mockImgAvatar(2),\n  type: 'friend_interactive',\n  createdAt: sub(new Date(), {\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: true\n}, {\n  id: faker.datatype.uuid(),\n  title: 'You have new message',\n  description: '5 unread messages',\n  avatar: null,\n  type: 'chat_message',\n  createdAt: sub(new Date(), {\n    days: 1,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}, {\n  id: faker.datatype.uuid(),\n  title: 'You have new mail',\n  description: 'sent from Guido Padberg',\n  avatar: null,\n  type: 'mail',\n  createdAt: sub(new Date(), {\n    days: 2,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}, {\n  id: faker.datatype.uuid(),\n  title: 'Delivery processing',\n  description: 'Your order is being shipped',\n  avatar: null,\n  type: 'order_shipped',\n  createdAt: sub(new Date(), {\n    days: 3,\n    hours: 3,\n    minutes: 30\n  }),\n  isUnRead: false\n}];\n\nfunction renderContent(notification) {\n  const title = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: [notification.title, /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary'\n      },\n      children: [\"\\xA0 \", noCase(notification.description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_package.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_shipping.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'mail') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_mail.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_chat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  return {\n    avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: notification.title,\n      src: notification.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this),\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({\n  notification\n}) {\n  const {\n    avatar\n  } = renderContent(notification);\n  const {\n    title\n  } = renderContent(notification);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    to: \"#\",\n    disableGutters: true,\n    component: RouterLink,\n    sx: {\n      py: 1.5,\n      px: 2.5,\n      '&:not(:last-of-type)': {\n        mb: '1px'\n      },\n      ...(notification.isUnRead && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'background.neutral'\n        },\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: title,\n      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          mt: 0.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.disabled'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: Icon,\n          icon: clockFill,\n          sx: {\n            mr: 0.5,\n            width: 16,\n            height: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), formatDistanceToNow(new Date(notification.createdAt))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, notification.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NotificationItem;\nexport default function NotificationsPopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(NOTIFICATIONS);\n  const totalUnRead = notifications.filter(item => item.isUnRead === true).length;\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification,\n      isUnRead: false\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      onClick: () => setOpen(true),\n      color: open ? 'primary' : 'default',\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: totalUnRead,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: bellFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: () => setOpen(false),\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          py: 2,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"You have \", totalUnRead, \" unread messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), totalUnRead > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \" Mark all as read\",\n          children: /*#__PURE__*/_jsxDEV(MIconButton, {\n            color: \"primary\",\n            onClick: handleMarkAllAsRead,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: doneAllFill,\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: {\n            xs: 340,\n            sm: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(0, 2).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"Before that\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(2, 5).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disableRipple: true,\n          component: RouterLink,\n          to: \"#\",\n          children: \"View All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NotificationsPopover, \"XXkL7JuYe66+mtKw1h6eDMDaHhc=\");\n\n_c2 = NotificationsPopover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationItem\");\n$RefreshReg$(_c2, \"NotificationsPopover\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/layouts/dashboard/NotificationsPopover.js"],"names":["faker","PropTypes","set","sub","formatDistanceToNow","noCase","Icon","useRef","useState","bellFill","clockFill","Link","RouterLink","doneAllFill","Box","List","Badge","Button","Avatar","Tooltip","Divider","ListItem","Typography","ListItemText","ListSubheader","ListItemAvatar","mockImgAvatar","Scrollbar","MenuPopover","MIconButton","NOTIFICATIONS","id","datatype","uuid","title","description","avatar","type","createdAt","Date","hours","minutes","isUnRead","name","findName","days","renderContent","notification","color","NotificationItem","propTypes","object","isRequired","py","px","mb","bgcolor","mt","display","alignItems","mr","width","height","NotificationsPopover","anchorRef","open","setOpen","notifications","setNotifications","totalUnRead","filter","item","length","handleMarkAllAsRead","map","current","flexGrow","xs","sm","typography","slice","p"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport PropTypes from 'prop-types';\nimport { set, sub, formatDistanceToNow } from 'date-fns';\nimport { noCase } from 'change-case';\nimport { Icon } from '@iconify/react';\n\nimport { useRef, useState } from 'react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\n// material\nimport {\n  Box,\n  List,\n  Badge,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  ListItem,\n  Typography,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar\n} from '@material-ui/core';\n// utils\nimport { mockImgAvatar } from '../../utils/mockImages';\n// components\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst NOTIFICATIONS = [\n  {\n    id: faker.datatype.uuid(),\n    title: 'Your order is placed',\n    description: 'waiting for shipping',\n    avatar: null,\n    type: 'order_placed',\n    createdAt: set(new Date(), { hours: 10, minutes: 30 }),\n    isUnRead: true\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: faker.name.findName(),\n    description: 'answered to your comment on the Minimal',\n    avatar: mockImgAvatar(2),\n    type: 'friend_interactive',\n    createdAt: sub(new Date(), { hours: 3, minutes: 30 }),\n    isUnRead: true\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'You have new message',\n    description: '5 unread messages',\n    avatar: null,\n    type: 'chat_message',\n    createdAt: sub(new Date(), { days: 1, hours: 3, minutes: 30 }),\n    isUnRead: false\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'You have new mail',\n    description: 'sent from Guido Padberg',\n    avatar: null,\n    type: 'mail',\n    createdAt: sub(new Date(), { days: 2, hours: 3, minutes: 30 }),\n    isUnRead: false\n  },\n  {\n    id: faker.datatype.uuid(),\n    title: 'Delivery processing',\n    description: 'Your order is being shipped',\n    avatar: null,\n    type: 'order_shipped',\n    createdAt: sub(new Date(), { days: 3, hours: 3, minutes: 30 }),\n    isUnRead: false\n  }\n];\n\nfunction renderContent(notification) {\n  const title = (\n    <Typography variant=\"subtitle2\">\n      {notification.title}\n      <Typography\n        component=\"span\"\n        variant=\"body2\"\n        sx={{ color: 'text.secondary' }}\n      >\n        &nbsp; {noCase(notification.description)}\n      </Typography>\n    </Typography>\n  );\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"/static/icons/ic_notification_package.svg\"\n        />\n      ),\n      title\n    };\n  }\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"/static/icons/ic_notification_shipping.svg\"\n        />\n      ),\n      title\n    };\n  }\n  if (notification.type === 'mail') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"/static/icons/ic_notification_mail.svg\"\n        />\n      ),\n      title\n    };\n  }\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"/static/icons/ic_notification_chat.svg\"\n        />\n      ),\n      title\n    };\n  }\n  return {\n    avatar: <img alt={notification.title} src={notification.avatar} />,\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({ notification }) {\n  const { avatar } = renderContent(notification);\n  const { title } = renderContent(notification);\n\n  return (\n    <ListItem\n      button\n      to=\"#\"\n      disableGutters\n      key={notification.id}\n      component={RouterLink}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        '&:not(:last-of-type)': { mb: '1px' },\n        ...(notification.isUnRead && {\n          bgcolor: 'action.selected'\n        })\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: 'text.disabled'\n            }}\n          >\n            <Box\n              component={Icon}\n              icon={clockFill}\n              sx={{ mr: 0.5, width: 16, height: 16 }}\n            />\n            {formatDistanceToNow(new Date(notification.createdAt))}\n          </Typography>\n        }\n      />\n    </ListItem>\n  );\n}\n\nexport default function NotificationsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(NOTIFICATIONS);\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true)\n    .length;\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        isUnRead: false\n      }))\n    );\n  };\n\n  return (\n    <>\n      <MIconButton\n        ref={anchorRef}\n        onClick={() => setOpen(true)}\n        color={open ? 'primary' : 'default'}\n      >\n        <Badge badgeContent={totalUnRead} color=\"error\">\n          <Icon icon={bellFill} width={20} height={20} />\n        </Badge>\n      </MIconButton>\n\n      <MenuPopover\n        open={open}\n        onClose={() => setOpen(false)}\n        anchorEl={anchorRef.current}\n        sx={{ width: 360 }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">Notifications</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              You have {totalUnRead} unread messages\n            </Typography>\n          </Box>\n\n          {totalUnRead > 0 && (\n            <Tooltip title=\" Mark all as read\">\n              <MIconButton color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Icon icon={doneAllFill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader\n                disableSticky\n                sx={{ py: 1, px: 2.5, typography: 'overline' }}\n              >\n                New\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(0, 2).map((notification) => (\n              <NotificationItem\n                key={notification.id}\n                notification={notification}\n              />\n            ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader\n                disableSticky\n                sx={{ py: 1, px: 2.5, typography: 'overline' }}\n              >\n                Before that\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(2, 5).map((notification) => (\n              <NotificationItem\n                key={notification.id}\n                notification={notification}\n              />\n            ))}\n          </List>\n        </Scrollbar>\n\n        <Divider />\n\n        <Box sx={{ p: 1 }}>\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\n            View All\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}