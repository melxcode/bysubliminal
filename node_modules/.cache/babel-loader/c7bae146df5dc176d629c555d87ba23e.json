{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport FadeTransitionGroup from './PickersFadeTransitionGroup'; // tslint:disable-next-line no-relative-import-in-test\n\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 8,\n    paddingLeft: 24,\n    paddingRight: 12,\n    // prevent jumping in safari\n    maxHeight: 30,\n    minHeight: 30\n  },\n  yearSelectionSwitcher: {\n    marginRight: 'auto'\n  },\n  switchView: {\n    willChange: 'transform',\n    transition: theme.transitions.create('transform'),\n    transform: 'rotate(0deg)'\n  },\n  switchViewActive: {\n    transform: 'rotate(180deg)'\n  },\n  label: _extends({\n    display: 'flex',\n    maxHeight: 30,\n    overflow: 'hidden',\n    alignItems: 'center',\n    cursor: 'pointer',\n    marginRight: 'auto'\n  }, theme.typography.body1, {\n    fontWeight: theme.typography.fontWeightMedium\n  }),\n  labelItem: {\n    marginRight: 6\n  }\n});\n\nfunction getSwitchingViewAriaText(view) {\n  return view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view';\n}\n/**\n * @ignore - do not document.\n */\n\n\nfunction PickersCalendarHeader(props) {\n  const {\n    classes,\n    components = {},\n    componentsProps = {},\n    currentMonth: month,\n    disableFuture,\n    disablePast,\n    getViewSwitchingButtonText = getSwitchingViewAriaText,\n    leftArrowButtonText = 'Previous month',\n    maxDate,\n    minDate,\n    onMonthChange,\n    onViewChange,\n    openView: currentView,\n    reduceAnimations,\n    rightArrowButtonText = 'Next month',\n    views\n  } = props;\n  const utils = useUtils();\n  const SwitchViewButton = components.SwitchViewButton || IconButton;\n  const switchViewButtonProps = componentsProps.switchViewButton || {};\n  const SwitchViewIcon = components.SwitchViewIcon || ArrowDropDownIcon;\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast,\n    minDate\n  });\n\n  const handleToggleView = () => {\n    if (views.length === 1 || !onViewChange) {\n      return;\n    }\n\n    if (views.length === 2) {\n      onViewChange(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      onViewChange(views[nextIndexToOpen]);\n    }\n  }; // No need to display more information\n\n\n  if (views.length === 1 && views[0] === 'year') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      role: \"presentation\",\n      className: classes.label,\n      onClick: handleToggleView,\n      children: [/*#__PURE__*/_jsx(FadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'month'),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          \"aria-live\": \"polite\",\n          className: classes.labelItem,\n          children: utils.format(month, 'month')\n        })\n      }), /*#__PURE__*/_jsx(FadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'year'),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          \"aria-live\": \"polite\",\n          className: classes.labelItem,\n          children: utils.format(month, 'year')\n        })\n      }), views.length > 1 && /*#__PURE__*/_jsx(SwitchViewButton, _extends({\n        size: \"small\",\n        className: classes.yearSelectionSwitcher,\n        \"aria-label\": getViewSwitchingButtonText(currentView)\n      }, switchViewButtonProps, {\n        children: /*#__PURE__*/_jsx(SwitchViewIcon, {\n          className: clsx(classes.switchView, currentView === 'year' && classes.switchViewActive)\n        })\n      }))]\n    }), /*#__PURE__*/_jsx(Fade, {\n      in: currentView === 'date',\n      children: /*#__PURE__*/_jsx(PickersArrowSwitcher, {\n        leftArrowButtonText: leftArrowButtonText,\n        rightArrowButtonText: rightArrowButtonText,\n        components: components,\n        componentsProps: componentsProps,\n        onLeftClick: selectPreviousMonth,\n        onRightClick: selectNextMonth,\n        isLeftDisabled: isPreviousMonthDisabled,\n        isRightDisabled: isNextMonthDisabled\n      })\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? PickersCalendarHeader.propTypes = {\n  leftArrowButtonText: PropTypes.string,\n  rightArrowButtonText: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPickersCalendarHeader'\n})(PickersCalendarHeader);","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/DayPicker/PickersCalendarHeader.js"],"names":["_extends","React","PropTypes","clsx","Fade","withStyles","IconButton","useUtils","FadeTransitionGroup","ArrowDropDownIcon","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","jsx","_jsx","jsxs","_jsxs","styles","theme","root","display","alignItems","marginTop","marginBottom","paddingLeft","paddingRight","maxHeight","minHeight","yearSelectionSwitcher","marginRight","switchView","willChange","transition","transitions","create","transform","switchViewActive","label","overflow","cursor","typography","body1","fontWeight","fontWeightMedium","labelItem","getSwitchingViewAriaText","view","PickersCalendarHeader","props","classes","components","componentsProps","currentMonth","month","disableFuture","disablePast","getViewSwitchingButtonText","leftArrowButtonText","maxDate","minDate","onMonthChange","onViewChange","openView","currentView","reduceAnimations","rightArrowButtonText","views","utils","SwitchViewButton","switchViewButtonProps","switchViewButton","SwitchViewIcon","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","isNextMonthDisabled","isPreviousMonthDisabled","handleToggleView","length","find","nextIndexToOpen","indexOf","className","children","role","onClick","transKey","format","size","in","onLeftClick","onRightClick","isLeftDisabled","isRightDisabled","process","env","NODE_ENV","propTypes","string","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport FadeTransitionGroup from './PickersFadeTransitionGroup';\n// tslint:disable-next-line no-relative-import-in-test\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 8,\n    paddingLeft: 24,\n    paddingRight: 12,\n    // prevent jumping in safari\n    maxHeight: 30,\n    minHeight: 30\n  },\n  yearSelectionSwitcher: {\n    marginRight: 'auto'\n  },\n  switchView: {\n    willChange: 'transform',\n    transition: theme.transitions.create('transform'),\n    transform: 'rotate(0deg)'\n  },\n  switchViewActive: {\n    transform: 'rotate(180deg)'\n  },\n  label: _extends({\n    display: 'flex',\n    maxHeight: 30,\n    overflow: 'hidden',\n    alignItems: 'center',\n    cursor: 'pointer',\n    marginRight: 'auto'\n  }, theme.typography.body1, {\n    fontWeight: theme.typography.fontWeightMedium\n  }),\n  labelItem: {\n    marginRight: 6\n  }\n});\n\nfunction getSwitchingViewAriaText(view) {\n  return view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view';\n}\n/**\n * @ignore - do not document.\n */\n\n\nfunction PickersCalendarHeader(props) {\n  const {\n    classes,\n    components = {},\n    componentsProps = {},\n    currentMonth: month,\n    disableFuture,\n    disablePast,\n    getViewSwitchingButtonText = getSwitchingViewAriaText,\n    leftArrowButtonText = 'Previous month',\n    maxDate,\n    minDate,\n    onMonthChange,\n    onViewChange,\n    openView: currentView,\n    reduceAnimations,\n    rightArrowButtonText = 'Next month',\n    views\n  } = props;\n  const utils = useUtils();\n  const SwitchViewButton = components.SwitchViewButton || IconButton;\n  const switchViewButtonProps = componentsProps.switchViewButton || {};\n  const SwitchViewIcon = components.SwitchViewIcon || ArrowDropDownIcon;\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast,\n    minDate\n  });\n\n  const handleToggleView = () => {\n    if (views.length === 1 || !onViewChange) {\n      return;\n    }\n\n    if (views.length === 2) {\n      onViewChange(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      onViewChange(views[nextIndexToOpen]);\n    }\n  }; // No need to display more information\n\n\n  if (views.length === 1 && views[0] === 'year') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      role: \"presentation\",\n      className: classes.label,\n      onClick: handleToggleView,\n      children: [/*#__PURE__*/_jsx(FadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'month'),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          \"aria-live\": \"polite\",\n          className: classes.labelItem,\n          children: utils.format(month, 'month')\n        })\n      }), /*#__PURE__*/_jsx(FadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'year'),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          \"aria-live\": \"polite\",\n          className: classes.labelItem,\n          children: utils.format(month, 'year')\n        })\n      }), views.length > 1 && /*#__PURE__*/_jsx(SwitchViewButton, _extends({\n        size: \"small\",\n        className: classes.yearSelectionSwitcher,\n        \"aria-label\": getViewSwitchingButtonText(currentView)\n      }, switchViewButtonProps, {\n        children: /*#__PURE__*/_jsx(SwitchViewIcon, {\n          className: clsx(classes.switchView, currentView === 'year' && classes.switchViewActive)\n        })\n      }))]\n    }), /*#__PURE__*/_jsx(Fade, {\n      in: currentView === 'date',\n      children: /*#__PURE__*/_jsx(PickersArrowSwitcher, {\n        leftArrowButtonText: leftArrowButtonText,\n        rightArrowButtonText: rightArrowButtonText,\n        components: components,\n        componentsProps: componentsProps,\n        onLeftClick: selectPreviousMonth,\n        onRightClick: selectNextMonth,\n        isLeftDisabled: isPreviousMonthDisabled,\n        isRightDisabled: isNextMonthDisabled\n      })\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? PickersCalendarHeader.propTypes = {\n  leftArrowButtonText: PropTypes.string,\n  rightArrowButtonText: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPickersCalendarHeader'\n})(PickersCalendarHeader);"]},"metadata":{},"sourceType":"module"}