{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\components\\\\@material-extend\\\\MSwitch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // material\n\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { Switch } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MSwitch({\n  color = 'primary',\n  sx,\n  ...other\n}) {\n  _s();\n\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      color: color,\n      sx: sx,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    sx: {\n      '&.Mui-checked': {\n        color: theme.palette[color].main,\n        '&:hover': {\n          bgcolor: alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&.Mui-checked + .MuiSwitch-track': {\n        bgcolor: theme.palette[color].main\n      },\n      ...sx\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MSwitch, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = MSwitch;\nMSwitch.propTypes = {\n  sx: PropTypes.object,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MSwitch\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/components/@material-extend/MSwitch.js"],"names":["PropTypes","alpha","useTheme","Switch","MSwitch","color","sx","other","theme","palette","main","bgcolor","action","hoverOpacity","propTypes","object","oneOf"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,0BAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CAEA;;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAK,GAAG,SAAV;AAAqBC,EAAAA,EAArB;AAAyB,KAAGC;AAA5B,CAAjB,EAAsD;AAAA;;AACnE,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;;AAEA,MAAIG,KAAK,KAAK,SAAV,IAAuBA,KAAK,KAAK,SAAjC,IAA8CA,KAAK,KAAK,WAA5D,EAAyE;AACvE,wBAAO,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAsB,MAAA,EAAE,EAAEC,EAA1B;AAAA,SAAkCC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,EAAE,EAAE;AACF,uBAAiB;AACfF,QAAAA,KAAK,EAAEG,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqBK,IADb;AAEf,mBAAW;AACTC,UAAAA,OAAO,EAAEV,KAAK,CACZO,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqBK,IADT,EAEZF,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAqBC,YAFT;AADL;AAFI,OADf;AAUF,0CAAoC;AAClCF,QAAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqBK;AADI,OAVlC;AAaF,SAAGJ;AAbD,KADN;AAAA,OAgBMC;AAhBN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3BuBH,O;UACRF,Q;;;KADQE,O;AA6BxBA,OAAO,CAACU,SAAR,GAAoB;AAClBR,EAAAA,EAAE,EAAEN,SAAS,CAACe,MADI;AAElBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,CAAhB;AAFW,CAApB","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { Switch } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nexport default function MSwitch({ color = 'primary', sx, ...other }) {\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'primary' || color === 'secondary') {\n    return <Switch color={color} sx={sx} {...other} />;\n  }\n\n  return (\n    <Switch\n      sx={{\n        '&.Mui-checked': {\n          color: theme.palette[color].main,\n          '&:hover': {\n            bgcolor: alpha(\n              theme.palette[color].main,\n              theme.palette.action.hoverOpacity\n            )\n          }\n        },\n        '&.Mui-checked + .MuiSwitch-track': {\n          bgcolor: theme.palette[color].main\n        },\n        ...sx\n      }}\n      {...other}\n    />\n  );\n}\n\nMSwitch.propTypes = {\n  sx: PropTypes.object,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ])\n};\n"]},"metadata":{},"sourceType":"module"}