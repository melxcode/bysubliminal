{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../DayPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { defaultMinDate, defaultMaxDate } from '../internal/pickers/constants/prop-types';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  rangeCalendarContainer: {\n    '&:not(:last-child)': {\n      borderRight: `2px solid ${theme.palette.divider}`\n    }\n  },\n  calendar: {\n    minWidth: 312,\n    minHeight: 288\n  },\n  arrowSwitcher: {\n    padding: '16px 16px 8px 16px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    classes,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"calendars\", \"changeMonth\", \"classes\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"]);\n\n  const utils = useUtils();\n  const minDate = minDateProp || utils.date(defaultMinDate);\n  const maxDate = maxDateProp || utils.date(defaultMaxDate);\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.rangeCalendarContainer,\n        children: [/*#__PURE__*/_jsx(PickersArrowSwitcher, {\n          className: classes.arrowSwitcher,\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(PickersCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          className: classes.calendar,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerViewDesktop'\n})(DateRangePickerViewDesktop);","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/DateRangePicker/DateRangePickerViewDesktop.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","withStyles","useUtils","calculateRangePreview","PickersCalendar","DateRangePickerDay","defaultMinDate","defaultMaxDate","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","isWithinRange","isStartOfRange","isEndOfRange","doNothing","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","styles","theme","root","display","flexDirection","rangeCalendarContainer","borderRight","palette","divider","calendar","minWidth","minHeight","arrowSwitcher","padding","alignItems","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","props","changeMonth","classes","components","componentsProps","currentlySelectingRangeEnd","currentMonth","date","disableFuture","disablePast","leftArrowButtonText","maxDate","maxDateProp","minDate","minDateProp","onChange","renderDay","_","dateRangeProps","rightArrowButtonText","other","utils","rangePreviewDay","setRangePreviewDay","useState","isNextMonthDisabled","isPreviousMonthDisabled","previewingRange","range","newDate","handleDayChange","useCallback","day","handlePreviewDayChange","newPreviewRequest","CalendarTransitionProps","useMemo","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","className","children","map","index","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","key","onFocusedDayChange","TransitionProps","__","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isStartOfHighlighting","isEndOfHighlighting","onMouseEnter","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../DayPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { defaultMinDate, defaultMaxDate } from '../internal/pickers/constants/prop-types';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  rangeCalendarContainer: {\n    '&:not(:last-child)': {\n      borderRight: `2px solid ${theme.palette.divider}`\n    }\n  },\n  calendar: {\n    minWidth: 312,\n    minHeight: 288\n  },\n  arrowSwitcher: {\n    padding: '16px 16px 8px 16px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    classes,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"calendars\", \"changeMonth\", \"classes\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"]);\n\n  const utils = useUtils();\n  const minDate = minDateProp || utils.date(defaultMinDate);\n  const maxDate = maxDateProp || utils.date(defaultMaxDate);\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.rangeCalendarContainer,\n        children: [/*#__PURE__*/_jsx(PickersArrowSwitcher, {\n          className: classes.arrowSwitcher,\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(PickersCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          className: classes.calendar,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerViewDesktop'\n})(DateRangePickerViewDesktop);"]},"metadata":{},"sourceType":"module"}