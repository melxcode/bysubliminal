{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\layouts\\\\dashboard\\\\LanguagePopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react'; // material\n\nimport { Box, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core'; // components\n\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGS = [{\n  value: 'en',\n  label: 'English',\n  icon: '/static/icons/ic_flag_en.svg'\n}, {\n  value: 'de',\n  label: 'German',\n  icon: '/static/icons/ic_flag_de.svg'\n}, {\n  value: 'fr',\n  label: 'French',\n  icon: '/static/icons/ic_flag_fr.svg'\n}]; // ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      onClick: () => setOpen(true),\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          bgcolor: 'action.selected'\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LANGS[0].icon,\n        alt: LANGS[0].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: () => setOpen(false),\n      anchorEl: anchorRef.current,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 1\n        },\n        children: LANGS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: option.value === LANGS[0].value,\n          onClick: () => setOpen(false),\n          sx: {\n            py: 1,\n            px: 2.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"img\",\n              alt: option.label,\n              src: option.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primaryTypographyProps: {\n              variant: 'body2'\n            },\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LanguagePopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/layouts/dashboard/LanguagePopover.js"],"names":["useRef","useState","Box","MenuItem","ListItemIcon","ListItemText","MenuPopover","MIconButton","LANGS","value","label","icon","LanguagePopover","anchorRef","open","setOpen","padding","width","height","bgcolor","current","py","map","option","px","variant"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,YAAxB,EAAsCC,YAAtC,QAA0D,mBAA1D,C,CACA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,QAA4B,mCAA5B,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADY,EAMZ;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANY,EAWZ;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXY,CAAd,C,CAkBA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,GAAG,EAAEY,SADP;AAEE,MAAA,OAAO,EAAE,MAAME,OAAO,CAAC,IAAD,CAFxB;AAGE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,CADP;AAEFC,QAAAA,KAAK,EAAE,EAFL;AAGFC,QAAAA,MAAM,EAAE,EAHN;AAIF,YAAIJ,IAAI,IAAI;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAJE,OAHN;AAAA,6BAUE;AAAK,QAAA,GAAG,EAAEX,KAAK,CAAC,CAAD,CAAL,CAASG,IAAnB;AAAyB,QAAA,GAAG,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASE;AAAvC;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEI,IADR;AAEE,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAFxB;AAGE,MAAA,QAAQ,EAAEF,SAAS,CAACO,OAHtB;AAAA,6BAKE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,kBACGb,KAAK,CAACc,GAAN,CAAWC,MAAD,iBACT,QAAC,QAAD;AAEE,UAAA,QAAQ,EAAEA,MAAM,CAACd,KAAP,KAAiBD,KAAK,CAAC,CAAD,CAAL,CAASC,KAFtC;AAGE,UAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,KAAD,CAHxB;AAIE,UAAA,EAAE,EAAE;AAAEM,YAAAA,EAAE,EAAE,CAAN;AAASG,YAAAA,EAAE,EAAE;AAAb,WAJN;AAAA,kCAME,QAAC,YAAD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,KAAf;AAAqB,cAAA,GAAG,EAAED,MAAM,CAACb,KAAjC;AAAwC,cAAA,GAAG,EAAEa,MAAM,CAACZ;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,YAAD;AAAc,YAAA,sBAAsB,EAAE;AAAEc,cAAAA,OAAO,EAAE;AAAX,aAAtC;AAAA,sBACGF,MAAM,CAACb;AADV;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,WACOa,MAAM,CAACd,KADd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAwCD;;GA5CuBG,e;;KAAAA,e","sourcesContent":["import { useRef, useState } from 'react';\n// material\nimport { Box, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';\n// components\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst LANGS = [\n  {\n    value: 'en',\n    label: 'English',\n    icon: '/static/icons/ic_flag_en.svg'\n  },\n  {\n    value: 'de',\n    label: 'German',\n    icon: '/static/icons/ic_flag_de.svg'\n  },\n  {\n    value: 'fr',\n    label: 'French',\n    icon: '/static/icons/ic_flag_fr.svg'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <MIconButton\n        ref={anchorRef}\n        onClick={() => setOpen(true)}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && { bgcolor: 'action.selected' })\n        }}\n      >\n        <img src={LANGS[0].icon} alt={LANGS[0].label} />\n      </MIconButton>\n\n      <MenuPopover\n        open={open}\n        onClose={() => setOpen(false)}\n        anchorEl={anchorRef.current}\n      >\n        <Box sx={{ py: 1 }}>\n          {LANGS.map((option) => (\n            <MenuItem\n              key={option.value}\n              selected={option.value === LANGS[0].value}\n              onClick={() => setOpen(false)}\n              sx={{ py: 1, px: 2.5 }}\n            >\n              <ListItemIcon>\n                <Box component=\"img\" alt={option.label} src={option.icon} />\n              </ListItemIcon>\n              <ListItemText primaryTypographyProps={{ variant: 'body2' }}>\n                {option.label}\n              </ListItemText>\n            </MenuItem>\n          ))}\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}