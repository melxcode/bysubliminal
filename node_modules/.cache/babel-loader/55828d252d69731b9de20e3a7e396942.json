{"ast":null,"code":"import * as React from 'react';\nimport { useUtils } from './useUtils';\n\nconst defaultIsSameError = (a, b) => a === b;\n\nexport function makeValidationHook(validateFn, {\n  isSameError = defaultIsSameError\n} = {}) {\n  return (value, props) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef(null);\n    const validationError = validateFn(utils, value, props);\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n    return validationError;\n  };\n}","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/internal/pickers/hooks/useValidation.js"],"names":["React","useUtils","defaultIsSameError","a","b","makeValidationHook","validateFn","isSameError","value","props","utils","previousValidationErrorRef","useRef","validationError","useEffect","onError","current"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CAA3C;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7CC,EAAAA,WAAW,GAAGL;AAD+B,IAE3C,EAFG,EAEC;AACN,SAAO,CAACM,KAAD,EAAQC,KAAR,KAAkB;AACvB,UAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,UAAMU,0BAA0B,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAnC;AACA,UAAMC,eAAe,GAAGP,UAAU,CAACI,KAAD,EAAQF,KAAR,EAAeC,KAAf,CAAlC;AACAT,IAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,UAAIL,KAAK,CAACM,OAAN,IAAiB,CAACR,WAAW,CAACM,eAAD,EAAkBF,0BAA0B,CAACK,OAA7C,CAAjC,EAAwF;AACtFP,QAAAA,KAAK,CAACM,OAAN,CAAcF,eAAd,EAA+BL,KAA/B;AACD;;AAEDG,MAAAA,0BAA0B,CAACK,OAA3B,GAAqCH,eAArC;AACD,KAND,EAMG,CAACF,0BAAD,EAA6BF,KAA7B,EAAoCI,eAApC,EAAqDL,KAArD,CANH;AAOA,WAAOK,eAAP;AACD,GAZD;AAaD","sourcesContent":["import * as React from 'react';\nimport { useUtils } from './useUtils';\n\nconst defaultIsSameError = (a, b) => a === b;\n\nexport function makeValidationHook(validateFn, {\n  isSameError = defaultIsSameError\n} = {}) {\n  return (value, props) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef(null);\n    const validationError = validateFn(utils, value, props);\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n    return validationError;\n  };\n}"]},"metadata":{},"sourceType":"module"}