{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, alpha } from '@material-ui/core/styles';\nimport { DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersDay, { areDayPropsEqual } from '../PickersDay/PickersDay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\n\nconst styles = theme => ({\n  root: {\n    '&:first-child $rangeIntervalDayPreview': _extends({}, startBorderStyle, {\n      borderLeftColor: theme.palette.divider\n    }),\n    '&:last-child $rangeIntervalDayPreview': _extends({}, endBorderStyle, {\n      borderRightColor: theme.palette.divider\n    })\n  },\n  rangeIntervalDayHighlight: {\n    borderRadius: 0,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: alpha(theme.palette.primary.light, 0.6),\n    '&:first-child': startBorderStyle,\n    '&:last-child': endBorderStyle\n  },\n  rangeIntervalDayHighlightStart: _extends({}, startBorderStyle, {\n    paddingLeft: 0,\n    marginLeft: DAY_MARGIN / 2\n  }),\n  rangeIntervalDayHighlightEnd: _extends({}, endBorderStyle, {\n    paddingRight: 0,\n    marginRight: DAY_MARGIN / 2\n  }),\n  day: {\n    // Required to overlap preview border\n    transform: 'scale(1.1)',\n    '& > *': {\n      transform: 'scale(0.9)'\n    }\n  },\n  dayOutsideRangeInterval: {\n    '&:hover': {\n      border: `1px solid ${theme.palette.grey[500]}`\n    }\n  },\n  dayInsideRangeInterval: {\n    color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n  },\n  notSelectedDate: {\n    backgroundColor: 'transparent'\n  },\n  rangeIntervalPreview: {\n    // replace default day component margin with transparent border to avoid jumping on preview\n    border: '2px solid transparent'\n  },\n  rangeIntervalDayPreview: {\n    borderRadius: 0,\n    border: `2px dashed ${theme.palette.divider}`,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    '&$rangeIntervalDayPreviewStart': _extends({\n      borderLeftColor: theme.palette.divider\n    }, startBorderStyle),\n    '&$rangeIntervalDayPreviewEnd': _extends({\n      borderRightColor: theme.palette.divider\n    }, endBorderStyle)\n  },\n  rangeIntervalDayPreviewStart: {},\n  rangeIntervalDayPreviewEnd: {}\n});\n\nconst DateRangePickerDay = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(props, ref) {\n  const {\n    classes,\n    className,\n    day,\n    outsideCurrentMonth,\n    isEndOfHighlighting,\n    isEndOfPreviewing,\n    isHighlighting,\n    isPreviewing,\n    isStartOfHighlighting,\n    isStartOfPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"]);\n\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: clsx(classes.root, className, (isEndOfHighlighting || isEndOfMonth) && classes.rangeIntervalDayHighlightEnd, (isStartOfHighlighting || isStartOfMonth) && classes.rangeIntervalDayHighlightStart, shouldRenderHighlight && classes.rangeIntervalDayHighlight),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      role: \"cell\",\n      className: clsx(classes.rangeIntervalPreview, (isEndOfPreviewing || isEndOfMonth) && classes.rangeIntervalDayPreviewEnd, (isStartOfPreviewing || isStartOfMonth) && classes.rangeIntervalDayPreviewStart, shouldRenderPreview && classes.rangeIntervalDayPreview),\n      children: /*#__PURE__*/_jsx(PickersDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        allowSameDateSelection: true,\n        allowKeyboardControl: false,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: clsx(classes.day, !selected && [classes.notSelectedDate, isHighlighting && classes.dayInsideRangeInterval], !isHighlighting && classes.dayOutsideRangeInterval)\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDay.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool\n} : void 0;\n/**\n *\n * API:\n *\n * - [DateRangePickerDay API](https://material-ui.com/api/date-range-picker-day/)\n */\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerDay'\n})( /*#__PURE__*/React.memo(DateRangePickerDay, (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n}));","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/DateRangePickerDay/DateRangePickerDay.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","alpha","DAY_MARGIN","useUtils","PickersDay","areDayPropsEqual","jsx","_jsx","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","styles","theme","root","borderLeftColor","palette","divider","borderRightColor","rangeIntervalDayHighlight","borderRadius","color","primary","contrastText","backgroundColor","light","rangeIntervalDayHighlightStart","paddingLeft","marginLeft","rangeIntervalDayHighlightEnd","paddingRight","marginRight","day","transform","dayOutsideRangeInterval","border","grey","dayInsideRangeInterval","getContrastText","notSelectedDate","rangeIntervalPreview","rangeIntervalDayPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","DateRangePickerDay","forwardRef","props","ref","classes","className","outsideCurrentMonth","isEndOfHighlighting","isEndOfPreviewing","isHighlighting","isPreviewing","isStartOfHighlighting","isStartOfPreviewing","selected","other","utils","isEndOfMonth","isSameDay","endOfMonth","isStartOfMonth","startOfMonth","shouldRenderHighlight","shouldRenderPreview","children","role","disableMargin","allowSameDateSelection","allowKeyboardControl","process","env","NODE_ENV","propTypes","node","object","isRequired","string","any","bool","name","memo","prevProps","nextProps"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, alpha } from '@material-ui/core/styles';\nimport { DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersDay, { areDayPropsEqual } from '../PickersDay/PickersDay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\n\nconst styles = theme => ({\n  root: {\n    '&:first-child $rangeIntervalDayPreview': _extends({}, startBorderStyle, {\n      borderLeftColor: theme.palette.divider\n    }),\n    '&:last-child $rangeIntervalDayPreview': _extends({}, endBorderStyle, {\n      borderRightColor: theme.palette.divider\n    })\n  },\n  rangeIntervalDayHighlight: {\n    borderRadius: 0,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: alpha(theme.palette.primary.light, 0.6),\n    '&:first-child': startBorderStyle,\n    '&:last-child': endBorderStyle\n  },\n  rangeIntervalDayHighlightStart: _extends({}, startBorderStyle, {\n    paddingLeft: 0,\n    marginLeft: DAY_MARGIN / 2\n  }),\n  rangeIntervalDayHighlightEnd: _extends({}, endBorderStyle, {\n    paddingRight: 0,\n    marginRight: DAY_MARGIN / 2\n  }),\n  day: {\n    // Required to overlap preview border\n    transform: 'scale(1.1)',\n    '& > *': {\n      transform: 'scale(0.9)'\n    }\n  },\n  dayOutsideRangeInterval: {\n    '&:hover': {\n      border: `1px solid ${theme.palette.grey[500]}`\n    }\n  },\n  dayInsideRangeInterval: {\n    color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n  },\n  notSelectedDate: {\n    backgroundColor: 'transparent'\n  },\n  rangeIntervalPreview: {\n    // replace default day component margin with transparent border to avoid jumping on preview\n    border: '2px solid transparent'\n  },\n  rangeIntervalDayPreview: {\n    borderRadius: 0,\n    border: `2px dashed ${theme.palette.divider}`,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    '&$rangeIntervalDayPreviewStart': _extends({\n      borderLeftColor: theme.palette.divider\n    }, startBorderStyle),\n    '&$rangeIntervalDayPreviewEnd': _extends({\n      borderRightColor: theme.palette.divider\n    }, endBorderStyle)\n  },\n  rangeIntervalDayPreviewStart: {},\n  rangeIntervalDayPreviewEnd: {}\n});\n\nconst DateRangePickerDay = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(props, ref) {\n  const {\n    classes,\n    className,\n    day,\n    outsideCurrentMonth,\n    isEndOfHighlighting,\n    isEndOfPreviewing,\n    isHighlighting,\n    isPreviewing,\n    isStartOfHighlighting,\n    isStartOfPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"]);\n\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: clsx(classes.root, className, (isEndOfHighlighting || isEndOfMonth) && classes.rangeIntervalDayHighlightEnd, (isStartOfHighlighting || isStartOfMonth) && classes.rangeIntervalDayHighlightStart, shouldRenderHighlight && classes.rangeIntervalDayHighlight),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      role: \"cell\",\n      className: clsx(classes.rangeIntervalPreview, (isEndOfPreviewing || isEndOfMonth) && classes.rangeIntervalDayPreviewEnd, (isStartOfPreviewing || isStartOfMonth) && classes.rangeIntervalDayPreviewStart, shouldRenderPreview && classes.rangeIntervalDayPreview),\n      children: /*#__PURE__*/_jsx(PickersDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        allowSameDateSelection: true,\n        allowKeyboardControl: false,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: clsx(classes.day, !selected && [classes.notSelectedDate, isHighlighting && classes.dayInsideRangeInterval], !isHighlighting && classes.dayOutsideRangeInterval)\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDay.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool\n} : void 0;\n/**\n *\n * API:\n *\n * - [DateRangePickerDay API](https://material-ui.com/api/date-range-picker-day/)\n */\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerDay'\n})( /*#__PURE__*/React.memo(DateRangePickerDay, (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n}));"]},"metadata":{},"sourceType":"module"}