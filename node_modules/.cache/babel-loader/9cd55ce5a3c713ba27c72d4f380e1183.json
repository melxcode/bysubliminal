{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx'; // eslint-disable-next-line no-restricted-imports -- importing types\n\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from './TimelineContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '6px 16px',\n    flexGrow: 1\n  },\n\n  /* Styles applied to the root element if `align=\"left\"`. */\n  alignLeft: {},\n\n  /* Styles applied to the root element if `align=\"right\"`. */\n  alignRight: {},\n\n  /* Styles applied to the root element if `align=\"alternate\"`. */\n  alignAlternate: {}\n};\nconst Timeline = /*#__PURE__*/React.forwardRef(function Timeline(props, ref) {\n  const {\n    align = 'left',\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/_jsx(TimelineContext.Provider, {\n    value: {\n      align\n    },\n    children: /*#__PURE__*/_jsx(\"ul\", _extends({\n      className: clsx(classes.root, // @ts-expect-error unsafe string concat\n      classes[`align${capitalize(align)}`], className) // @ts-expect-error TypeScript bug, need to keep unknown for DX\n      ,\n      ref: ref\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Timeline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The position where the timeline's content should appear.\n   * @default 'left'\n   */\n  align: PropTypes.oneOf(['alternate', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Timeline](https://material-ui.com/components/timeline/)\n *\n * API:\n *\n * - [Timeline API](https://material-ui.com/api/timeline/)\n */\n\nexport default withStyles(styles, {\n  name: 'MuiTimeline'\n})(Timeline);","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/node_modules/@material-ui/lab/Timeline/Timeline.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","capitalize","withStyles","TimelineContext","jsx","_jsx","styles","root","display","flexDirection","padding","flexGrow","alignLeft","alignRight","alignAlternate","Timeline","forwardRef","props","ref","align","classes","className","other","Provider","value","children","process","env","NODE_ENV","propTypes","oneOf","node","object","string","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAAyB;;AAEzB,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,OAAO,EAAE,UAHL;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAFc;;AASpB;AACAC,EAAAA,SAAS,EAAE,EAVS;;AAYpB;AACAC,EAAAA,UAAU,EAAE,EAbQ;;AAepB;AACAC,EAAAA,cAAc,EAAE;AAhBI,CAAf;AAkBP,MAAMC,QAAQ,GAAG,aAAajB,KAAK,CAACkB,UAAN,CAAiB,SAASD,QAAT,CAAkBE,KAAlB,EAAyBC,GAAzB,EAA8B;AAC3E,QAAM;AACJC,IAAAA,KAAK,GAAG,MADJ;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFJ,KAJJ;AAAA,QAKMK,KAAK,GAAGzB,6BAA6B,CAACoB,KAAD,EAAQ,CAAC,OAAD,EAAU,SAAV,EAAqB,WAArB,CAAR,CAL3C;;AAOA,SAAO,aAAaZ,IAAI,CAACF,eAAe,CAACoB,QAAjB,EAA2B;AACjDC,IAAAA,KAAK,EAAE;AACLL,MAAAA;AADK,KAD0C;AAIjDM,IAAAA,QAAQ,EAAE,aAAapB,IAAI,CAAC,IAAD,EAAOT,QAAQ,CAAC;AACzCyB,MAAAA,SAAS,EAAErB,IAAI,CAACoB,OAAO,CAACb,IAAT,EAAe;AAC9Ba,MAAAA,OAAO,CAAE,QAAOnB,UAAU,CAACkB,KAAD,CAAQ,EAA3B,CADQ,EACuBE,SADvB,CAD0B,CAEQ;AAFR;AAIzCH,MAAAA,GAAG,EAAEA;AAJoC,KAAD,EAKvCI,KALuC,CAAf;AAJsB,GAA3B,CAAxB;AAWD,CAnB6B,CAA9B;AAoBAI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,QAAQ,CAACc;AACjD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACEV,EAAAA,KAAK,EAAEpB,SAAS,CAAC+B,KAAV,CAAgB,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAAhB,CAVP;;AAYA;AACF;AACA;AACEL,EAAAA,QAAQ,EAAE1B,SAAS,CAACgC,IAfpB;;AAiBA;AACF;AACA;AACEX,EAAAA,OAAO,EAAErB,SAAS,CAACiC,MApBnB;;AAsBA;AACF;AACA;AACEX,EAAAA,SAAS,EAAEtB,SAAS,CAACkC;AAzBrB,CAFF,GA4BI,KAAK,CA5BT;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe/B,UAAU,CAACI,MAAD,EAAS;AAChC4B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZnB,QAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx'; // eslint-disable-next-line no-restricted-imports -- importing types\n\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from './TimelineContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '6px 16px',\n    flexGrow: 1\n  },\n\n  /* Styles applied to the root element if `align=\"left\"`. */\n  alignLeft: {},\n\n  /* Styles applied to the root element if `align=\"right\"`. */\n  alignRight: {},\n\n  /* Styles applied to the root element if `align=\"alternate\"`. */\n  alignAlternate: {}\n};\nconst Timeline = /*#__PURE__*/React.forwardRef(function Timeline(props, ref) {\n  const {\n    align = 'left',\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/_jsx(TimelineContext.Provider, {\n    value: {\n      align\n    },\n    children: /*#__PURE__*/_jsx(\"ul\", _extends({\n      className: clsx(classes.root, // @ts-expect-error unsafe string concat\n      classes[`align${capitalize(align)}`], className) // @ts-expect-error TypeScript bug, need to keep unknown for DX\n      ,\n      ref: ref\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Timeline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The position where the timeline's content should appear.\n   * @default 'left'\n   */\n  align: PropTypes.oneOf(['alternate', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Timeline](https://material-ui.com/components/timeline/)\n *\n * API:\n *\n * - [Timeline API](https://material-ui.com/api/timeline/)\n */\n\nexport default withStyles(styles, {\n  name: 'MuiTimeline'\n})(Timeline);"]},"metadata":{},"sourceType":"module"}