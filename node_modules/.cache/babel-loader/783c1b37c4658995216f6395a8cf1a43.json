{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\react\\\\website\\\\src\\\\components\\\\@material-extend\\\\MBadge.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Badge } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MBadge = /*#__PURE__*/forwardRef(_c = _s(({\n  color = 'default',\n  children,\n  sx,\n  ...other\n}, ref) => {\n  _s();\n\n  const theme = useTheme();\n\n  if (color === 'default' || color === 'error' || color === 'primary' || color === 'secondary') {\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      ref: ref,\n      color: color,\n      sx: sx,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    ref: ref,\n    sx: {\n      '& .MuiBadge-badge': {\n        color: theme.palette[color].contrastText,\n        bgcolor: theme.palette[color].main\n      },\n      ...sx\n    },\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = MBadge;\nMBadge.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'])\n};\nexport default MBadge;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MBadge$forwardRef\");\n$RefreshReg$(_c2, \"MBadge\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/react/website/src/components/@material-extend/MBadge.js"],"names":["PropTypes","forwardRef","useTheme","Badge","MBadge","color","children","sx","other","ref","theme","palette","contrastText","bgcolor","main","propTypes","node","object","oneOf"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB,C,CAEA;;;AAEA,MAAMC,MAAM,gBAAGH,UAAU,SACvB,CAAC;AAAEI,EAAAA,KAAK,GAAG,SAAV;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,EAA/B;AAAmC,KAAGC;AAAtC,CAAD,EAAgDC,GAAhD,KAAwD;AAAA;;AACtD,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,MACEG,KAAK,KAAK,SAAV,IACAA,KAAK,KAAK,OADV,IAEAA,KAAK,KAAK,SAFV,IAGAA,KAAK,KAAK,WAJZ,EAKE;AACA,wBACE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEI,GAAZ;AAAiB,MAAA,KAAK,EAAEJ,KAAxB;AAA+B,MAAA,EAAE,EAAEE,EAAnC;AAAA,SAA2CC,KAA3C;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,KAAD;AACE,IAAA,GAAG,EAAEG,GADP;AAEE,IAAA,EAAE,EAAE;AACF,2BAAqB;AACnBJ,QAAAA,KAAK,EAAEK,KAAK,CAACC,OAAN,CAAcN,KAAd,EAAqBO,YADT;AAEnBC,QAAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcN,KAAd,EAAqBS;AAFX,OADnB;AAKF,SAAGP;AALD,KAFN;AAAA,OASMC,KATN;AAAA,cAWGF;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhCsB;AAAA,UAEPJ,QAFO;AAAA,GAAzB;MAAME,M;AAmCNA,MAAM,CAACW,SAAP,GAAmB;AACjBT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,IADH;AAEjBT,EAAAA,EAAE,EAAEP,SAAS,CAACiB,MAFG;AAGjBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,CAAhB;AAHU,CAAnB;AAcA,eAAed,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport { Badge } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst MBadge = forwardRef(\n  ({ color = 'default', children, sx, ...other }, ref) => {\n    const theme = useTheme();\n\n    if (\n      color === 'default' ||\n      color === 'error' ||\n      color === 'primary' ||\n      color === 'secondary'\n    ) {\n      return (\n        <Badge ref={ref} color={color} sx={sx} {...other}>\n          {children}\n        </Badge>\n      );\n    }\n\n    return (\n      <Badge\n        ref={ref}\n        sx={{\n          '& .MuiBadge-badge': {\n            color: theme.palette[color].contrastText,\n            bgcolor: theme.palette[color].main\n          },\n          ...sx\n        }}\n        {...other}\n      >\n        {children}\n      </Badge>\n    );\n  }\n);\n\nMBadge.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ])\n};\n\nexport default MBadge;\n"]},"metadata":{},"sourceType":"module"}